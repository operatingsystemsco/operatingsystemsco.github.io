
THIS SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE
OPEN GROUP BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN
AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

This software is provided so that you can try LBX with an X Server that 
supports LBX, e.g. PC X servers, even though your UNIX host does not have 
LBX or an lbxproxy yet.

(Sorry, we have no plans at this time to supply X Servers with LBX for 
UNIX platforms, nor do we supply PC X Servers. Please contact your PC 
X Server vendor for product availability and LBX support. Please contact 
your UNIX vendor for LBX availability or build your own server from the 
R6.5 sources.)

Q: How do I install lbxproxy?

A: Pick a place to install it -- /usr/local is one common place. Then 
   do the following:
    % cp lbxproxy-<architecture> /usr/local/bin/lbxproxy
    % chmod +x /usr/local/bin/lbxproxy
    % cp AtomControl /usr/local/lib
    % cp lbxproxy.man /usr/local/man/man1

Q: I have Solaris 2.x. Which lbxproxy should I use?

A: Use lbxproxy-solaris2.6 for Solaris 2.6. Use lbxproxy-solaris
   for all versions of Solaris 2.x prior to 2.6.

Q: There isn't a version for my operating system, now what?

A: Sorry. These are all the platforms we're capable of providing binaries 
   for. The only way to get an lbxproxy is to compile it yourself from the 
   source.

Q: How do I use lbxproxy?

A: On your UNIX application server start the lbxproxy first: 
   % lbxproxy :5 -display <mydesktop>:0 -atomsfile /usr/local/lib/AtomControl &
   This creates a "pseudo" server, just like your real server, only
   instead of using '-display :0' to start a program, you'll use
   '-display :5' instead. To run a program through the lbxproxy:
    % xterm -display :5.

Q: Okay, I did that, and I get this message:

    Xlib: connection to ":5.0" refused by server
    Xlib: Client is not authorized to connect to Server
    Error: Can't open display: :5

A: You need to add an Xauthority entry for server five to your ~/.Xauthority
   file. Do this:

    % xauth list
    <mydesktop>:0 MIT-MAGIC-COOKIE-1 <string of hex digits>
    ...
    % xauth add <mydesktop>:5 MIT-MAGIC-COOKIE-1 <string of hex digits>

   Do the same thing for the line that has XDM-AUTHORIZATION-1 if there
   is one. All the example above assume that you ran lbxproxy with ":5".
   If you used, e.g. ":6" instead, substitute 6 instead of 5 everywhere
   in the examples above. If you used ":127", then use 127 everywhere, 
   and so on.

Q: Do I need R6.4 libraries to run this lbxproxy.

A: No. Even though these are R6.4 binaries, they are built using the 
   vendor's X libraries. You don't need anything else.

Q: Do I need to set LD_LIBRARY_PATH, (or RUN_PATH)? What about on Sun
   where the libraries are in /usr/openwin/lib?

A: No, you shouldn't need to set anything. Where necessary lbxproxy has 
   been compiled/linked with a built-in run-path so that you don't need 
   to do anything in order to run it.

Q: How much faster do programs run when I use lbxproxy?

A: It varies. Our benchmarks show as much as a 70 to 90 percent reduction 
   in the number of bytes sent between the application and the X server. 
   We don't have a good way to objectively measure the speed difference,
   but over a 28.8 serial line this reduction can make a substantial and
   noticable improvement in the usability of a program. On ethernet there
   doesn't seem to be a noticable performance difference, but the reduction
   in bandwidth alone may make it worth using in a heavily loaded WAN.

