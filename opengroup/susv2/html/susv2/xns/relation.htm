<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<html>
<head>
<!-- Copyright 1997 The Open Group, All Rights Reserved -->
<title>Relationship to the XSH Specification</title>
</head><body bgcolor=white>
<center>
<font size=2>
The Single UNIX &reg; Specification, Version 2<br>
Copyright &copy; 1997 The Open Group

</font></center><hr size=2 noshade><blockquote>
<center>
<h3><a name = "tagcjh_02_04">&nbsp;</a>Relationship to the XSH Specification</h3>
</center>
<h4><a name = "tagcjh_02_04_01">&nbsp;</a>Error Numbers</h4>
Some functions provide an error number in
<i>errno</i>,
which is either a variable or macro defined in
<i><a href="../xsh/errno42.htm">&lt;errno.h&gt;</a></i>;
the macro expands to a modifiable
<b>lvalue</b>
of type
<b>int</b>.
<p>
A list of valid values for
<i>errno</i>
and advice to application writers on the use of
<i>errno</i>
appears in the <b>XSH</b> specification.
<h3><a name = "tagcjh_02_05">&nbsp;</a>Thread Safety</h3>

All interfaces defined by this document will be
thread-safe, except for the following interfaces
which need not be thread-safe: 
<p>
<dl compact><dt> <dd>
<i><a href="getho7.htm">gethostbyaddr()</a></i>
<br>
<i><a href="getho8.htm">gethostbyname()</a></i>
<br>
<i><a href="getho9.htm">gethostent()</a></i>
<br>
<i><a href="getne11.htm">getnetbyaddr()</a></i>
<br>
<i><a href="getne12.htm">getnetbyname()</a></i>
<br>
<i><a href="getne13.htm">getnetent()</a></i>
<br>
<i><a href="getpr16.htm">getprotobynumber()</a></i>
<br>
<i><a href="getpr15.htm">getprotobyname()</a></i>
<br>
<i><a href="getpr17.htm">getprotoent()</a></i>
<br>
<i><a href="getse18.htm">getservbyname()</a></i>
<br>
<i><a href="getse19.htm">getservbyport()</a></i>
<br>
<i><a href="getse20.htm">getservent()</a></i>
<br>
<i><a href="inetn29.htm">inet_ntoa()</a></i>
</dl>
<h3><a name = "tagcjh_02_06">&nbsp;</a>Thread Cancellation Points</h3>
Cancellation points will occur when a thread is executing any of the 
following functions:
<p>
<dl compact><dt> <dd>
<i><a href="accept.htm">accept()</a></i>
<br>
<i><a href="connect.htm">connect()</a></i>
<br>
<i><a href="recv.htm">recv()</a></i>
<br>
<i><a href="recvfrom.htm">recvfrom()</a></i>
<br>
<i><a href="recvmsg.htm">recvmsg()</a></i>
<br>
<i><a href="send.htm">send()</a></i>
<br>
<i><a href="sendmsg.htm">sendmsg()</a></i>
<br>
<i><a href="sendto.htm">sendto()</a></i>
<br>
<i><a href="tclos45.htm">t_close()</a></i>
<br>
<i><a href="tconn46.htm">t_connect()</a></i>
<br>
<i><a href="tlist53.htm">t_listen()</a></i>
<br>
<i><a href="trcv57.htm">t_rcv()</a></i>
<br>
<i><a href="trcvc58.htm">t_rcvconnect()</a></i>
<br>
<i><a href="trcvr60.htm">t_rcvrel()</a></i>
<br>
<i><a href="trcvr61.htm">t_rcvreldata()</a></i>
<br>
<i><a href="trcvu62.htm">t_rcvudata()</a></i>
<br>
<i><a href="trcvv64.htm">t_rcvv()</a></i>
<br>
<i><a href="trcvv65.htm">t_rcvvudata()</a></i>
<br>
<i><a href="tsnd66.htm">t_snd()</a></i>
<br>
<i><a href="tsndr68.htm">t_sndrel()</a></i>
<br>
<i><a href="tsndr69.htm">t_sndreldata()</a></i>
<br>
<i><a href="tsndu70.htm">t_sndudata()</a></i>
<br>
<i><a href="tsndv71.htm">t_sndv()</a></i>
<br>
<i><a href="tsndv72.htm">t_sndvudata()</a></i>
</dl>
<p>
A cancellation point may also occur when a thread is executing any of
the following functions:
<p>
<dl compact><dt> <dd>
<i><a href="endho2.htm">endhostent()</a></i>
<br>
<i><a href="endne3.htm">endnetent()</a></i>
<br>
<i><a href="endpr4.htm">endprotoent()</a></i>
<br>
<i><a href="endse5.htm">endservent()</a></i>
<br>
<i><a href="getho7.htm">gethostbyaddr()</a></i>
<br>
<i><a href="getho8.htm">gethostbyname()</a></i>
<br>
<i><a href="getho9.htm">gethostent()</a></i>
<br>
<i><a href="getho10.htm">gethostname()</a></i>
<br>
<i><a href="getne11.htm">getnetbyaddr()</a></i>
<br>
<i><a href="getne12.htm">getnetbyname()</a></i>
<br>
<i><a href="getne13.htm">getnetent()</a></i>
<br>
<i><a href="getpr16.htm">getprotobynumber()</a></i>
<br>
<i><a href="getpr15.htm">getprotobyname()</a></i>
<br>
<i><a href="getpr17.htm">getprotoent()</a></i>
<br>
<i><a href="getse19.htm">getservbyport()</a></i>
<br>
<i><a href="getse18.htm">getservbyname()</a></i>
<br>
<i><a href="getse20.htm">getservent()</a></i>
<br>
<i><a href="setho32.htm">sethostent()</a></i>
<br>
<i><a href="setne33.htm">setnetent()</a></i>
<br>
<i><a href="setpr34.htm">setprotoent()</a></i>
<br>
<i><a href="setse35.htm">setservent()</a></i>
</dl>
<p>
An implementation will not introduce cancellation points into any
other function specified in this document. 
<p>
See the
<b>XSH</b>,
<a href="../xsh/threads.htm">Section 2.8</a> for further information.
<h3><a name = "tagcjh_02_07">&nbsp;</a>Relationship to Emerging Formal Standards</h3>
The IEEE 1003.1g standards committee is also developing 
interfaces to XTI and Sockets.  
X/Open is actively involved in the work of this committee.
<p>
<p>
</blockquote><hr size=2 noshade>
<center><font size=2>
UNIX &reg; is a registered Trademark of The Open Group.<br>
Copyright &copy; 1997 The Open Group
<br> [ <a href="../index.htm">Main Index</a> | <a href="../xshix.htm">XSH</a> | <a href="../xcuix.htm">XCU</a> | <a href="../xbdix.htm">XBD</a> | <a href="../cursesix.htm">XCURSES</a> | <a href="../xnsix.htm">XNS</a> ]

</font></center><hr size=2 noshade>
</body></html>


