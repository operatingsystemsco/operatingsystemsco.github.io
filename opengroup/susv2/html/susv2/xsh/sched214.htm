<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<html>
<head>
<!-- Copyright 1997 The Open Group, All Rights Reserved -->
<title>sched_setparam</title>
</head><body bgcolor=white>
<center>
<font size=2>
The Single UNIX &reg; Specification, Version 2<br>
Copyright &copy; 1997 The Open Group

</font></center><hr size=2 noshade>
<h4><a name = "tag_000_008_216">&nbsp;</a>NAME</h4><blockquote>
sched_setparam - set scheduling parameters
(<b>REALTIME</b>)
</blockquote><h4><a name = "tag_000_008_217">&nbsp;</a>SYNOPSIS</h4><blockquote>
<pre><code>

#include &lt;<a href="sched208.htm">sched.h</a>&gt;

int sched_setparam(pid_t <i>pid</i>, const struct sched_param *<i>param</i>);
</code>
</pre>
</blockquote><h4><a name = "tag_000_008_218">&nbsp;</a>DESCRIPTION</h4><blockquote>
The
<i>sched_setparam()</i>
function sets the scheduling parameters of the process specified by
<i>pid</i>
to the values specified by the
<b>sched_param</b>
structure pointed to by
<i>param</i>.
The value of the
<i>sched_priority</i>
member in the
<b>sched_param</b>
structure is any integer within the inclusive priority range
for the current scheduling policy of the process specified by
<i>pid</i>.
Higher numerical values for the priority represent higher priorities.
If the value of
<i>pid</i>
is negative, the behaviour of the
<i>sched_setparam()</i>
function is unspecified.
<p>
If a process specified by
<i>pid</i>
exists and if the calling process has permission,
the scheduling parameters will be set for the process whose process ID
is equal to
<i>pid</i>.
<p>
If
<i>pid</i>
is zero, the scheduling parameters will be set for the calling process.
<p>
The conditions under which one process has permission
to change the scheduling parameters of another process
are implementation-dependent.
<p>
Implementations may require the requesting process
to have the appropriate privilege
to set its own scheduling parameters or those of another process.
<p>
The target process, whether it is running or not running, resumes
execution after all other runnable processes of equal or greater priority have
been scheduled to run.
<p>
If the priority of the process specified by the
<i>pid</i>
argument is set higher than that of the lowest priority running process
and if the specified process is ready to run, the process specified by the
<i>pid</i>
argument preempts a lowest priority running process.
Similarly, if the process calling
<i>sched_setparam()</i>
sets its own priority lower than that of one or more other
non-empty process lists,
then the process that is the head of the highest priority list
also preempts the calling process.
Thus, in either case,
the originating process might not receive notification
of the completion of the requested priority change
until the higher priority process has executed.
<p>
If the current scheduling policy for the process specified by
<i>pid</i>
is not SCHED_FIFO or SCHED_RR, including SCHED_OTHER,
the result is implementation-dependent.
<p>
The effect of this function on individual threads is dependent on the
scheduling contention scope of the threads:
<ul>
<p>
<li>
For threads with system scheduling contention scope, these functions
have no effect on their scheduling.
<p>
<li>
For threads with process scheduling contention scope,
&nbsp;the threads' scheduling parameters will not be affected.
However,
the scheduling of these threads with respect to threads in
other processes may be dependent on the scheduling parameters of their
process, which are governed using these functions.
<p>
</ul>
<p>
If an implementation supports a two-level scheduling model in which
library threads are multiplexed on top of several kernel scheduled
entities, then the underlying kernel scheduled entities for the system
contention scope threads will not be affected by these functions.
<p>
The underlying kernel scheduled entities for the process contention
scope threads will have their
scheduling parameters changed to the value 
specified in <i>param</i>. Kernel scheduled entities for use
by process contention scope threads that are created after this call
completes inherit their scheduling policy and
associated scheduling parameters from the process.
<p>
This function is not atomic with respect to other threads in the
process. Threads are allowed to continue to execute 
while this function call is in the process of changing 
the scheduling policy for the underlying
kernel scheduled entities used by the process contention scope threads.
</blockquote><h4><a name = "tag_000_008_219">&nbsp;</a>RETURN VALUE</h4><blockquote>
If successful, the
<i>sched_setparam()</i>
function returns zero.
<p>
If the call to
<i>sched_setparam()</i>
is unsuccessful,
the priority remains unchanged, and
the function returns a value of -1 and sets
<i>errno</i>
to indicate the error.
</blockquote><h4><a name = "tag_000_008_220">&nbsp;</a>ERRORS</h4><blockquote>
The 
<i>sched_setparam()</i>
function will fail if:
<dl compact>

<dt>[EINVAL]<dd>
One or more of the requested scheduling parameters is outside the range
defined for the scheduling policy of the specified
<i>pid</i>.

<dt>[ENOSYS]<dd>
The function
<i>sched_setparam()</i>
is not supported by this implementation.

<dt>[EPERM]<dd>
The requesting process does not have permission
to set the scheduling parameters for the specified process,
or does not have the appropriate privilege to invoke
<i>sched_setparam()</i>.

<dt>[ESRCH]<dd>
No process can be found corresponding to that specified by
<i>pid</i>.

</dl>
</blockquote><h4><a name = "tag_000_008_221">&nbsp;</a>EXAMPLES</h4><blockquote>
None.
</blockquote><h4><a name = "tag_000_008_222">&nbsp;</a>APPLICATION USAGE</h4><blockquote>
None.
</blockquote><h4><a name = "tag_000_008_223">&nbsp;</a>FUTURE DIRECTIONS</h4><blockquote>
None.
</blockquote><h4><a name = "tag_000_008_224">&nbsp;</a>SEE ALSO</h4><blockquote>
<i><a href="sched211.htm">sched_getparam()</a></i>,
<i><a href="sched212.htm">sched_getscheduler()</a></i>,
<i><a href="sched215.htm">sched_setscheduler()</a></i>,
<i><a href="sched208.htm">&lt;sched.h&gt;</a></i>.
</blockquote><h4>DERIVATION</h4><blockquote>
Derived from the POSIX Realtime Extension (1003.1b-1993/1003.1i-1995)
</blockquote><hr size=2 noshade>
<center><font size=2>
UNIX &reg; is a registered Trademark of The Open Group.<br>
Copyright &copy; 1997 The Open Group
<br> [ <a href="../index.htm">Main Index</a> | <a href="../xshix.htm">XSH</a> | <a href="../xcuix.htm">XCU</a> | <a href="../xbdix.htm">XBD</a> | <a href="../cursesix.htm">XCURSES</a> | <a href="../xnsix.htm">XNS</a> ]

</font></center><hr size=2 noshade>
</body></html>

