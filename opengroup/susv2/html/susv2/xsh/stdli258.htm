<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<html>
<head>
<!-- Copyright 1997 The Open Group, All Rights Reserved -->
<title>&lt;stdlib.h&gt;</title>
</head><body bgcolor=white>
<center>
<font size=2>
The Single UNIX &reg; Specification, Version 2<br>
Copyright &copy; 1997 The Open Group

</font></center><hr size=2 noshade>
<h4><a name = "tag_000_009_003">&nbsp;</a>NAME</h4><blockquote>
stdlib.h - standard library definitions
</blockquote><h4><a name = "tag_000_009_004">&nbsp;</a>SYNOPSIS</h4><blockquote>
<pre><code>

#include &lt;stdlib.h&gt;
</code>
</pre>
</blockquote><h4><a name = "tag_000_009_005">&nbsp;</a>DESCRIPTION</h4><blockquote>
The &lt;<b>stdlib.h</b>&gt; header defines the following macro names:
<dl compact>

<dt>EXIT_FAILURE<dd>
Unsuccessful termination for
<i><a href="exit.htm">exit()</a></i>,
evaluates to a non-zero value.

<dt>EXIT_SUCCESS<dd>
Successful termination for
<i><a href="exit.htm">exit()</a></i>,
evaluates to 0.

<dt>NULL<dd>
Null pointer.

<dt>RAND_MAX<dd>
Maximum value returned by <i>rand</i>(), at least 32,767.

<dt>MB_CUR_MAX<dd>
Integer expression whose value is the maximum number
of bytes in a character specified by the current locale.

</dl>
<p>
The following data types are defined through <b>typedef</b>:
<dl compact>

<dt><b>div_t</b><dd><index term="data type, div_t"></index>
Structure type returned by <i>div</i>() function.

<dt><b>ldiv_t</b><dd><index term="data type, ldiv_t"></index>
Structure type returned by <i>ldiv</i>() function.

<dt><b>size_t</b><dd>As described in
<i><a href="stdde256.htm">&lt;stddef.h&gt;</a></i>.

<dt><b>wchar_t</b><dd>As described in
<i><a href="stdde256.htm">&lt;stddef.h&gt;</a></i>.

</dl>
<p>
In addition, the following symbolic names and macros are defined
as in
<i><a href="syswa281.htm">&lt;sys/wait.h&gt;</a></i>,
for use in decoding the return value from
<i><a href="system.htm">system()</a></i>:
<p>
<pre>
WNOHANG
WUNTRACED
WEXITSTATUS()
WIFEXITED()
WIFSIGNALED()
WIFSTOPPED()
WSTOPSIG()
WTERMSIG()
</pre>
<p>
The following are declared as functions and may also be defined
as macros.
Function prototypes must be provided for use with an ISO C
compiler.
<pre>
<code>
long      <a href="a64l.htm">a64l</a>(const char *);
void      <a href="abort.htm">abort</a>(void);
int       <a href="abs.htm">abs</a>(int);
int       <a href="atexit.htm">atexit</a>(void (*)(void));
double    <a href="atof.htm">atof</a>(const char *);
int       <a href="atoi.htm">atoi</a>(const char *);
long int  <a href="atol.htm">atol</a>(const char *);
void     *<a href="bsearch.htm">bsearch</a>(const void *, const void *, size_t, size_t,
              int (*)(const void *, const void *));
void     *<a href="calloc.htm">calloc</a>(size_t, size_t);
div_t     <a href="div.htm">div</a>(int, int);
double    <a href="drand48.htm">drand48</a>(void);
char     *<a href="ecvt.htm">ecvt</a>(double, int, int *, int *);
double    <a href="erand48.htm">erand48</a>(unsigned short int[3]);
void      <a href="exit.htm">exit</a>(int);
char     *<a href="fcvt.htm">fcvt</a> (double, int, int *, int *);
void      <a href="free.htm">free</a>(void *);
<br>
char     *<a href="gcvt.htm">gcvt</a>(double, int, char *);
char     *<a href="getenv.htm">getenv</a>(const char *);
int       <a href="getsu70.htm">getsubopt</a>(char **, char *const *, char **);
int       <a href="grantpt.htm">grantpt</a>(int);
char     *<a href="inits80.htm">initstate</a>(unsigned int, char *, size_t);
long int  <a href="jrand48.htm">jrand48</a>(unsigned short int[3]);
char     *<a href="l64a.htm">l64a</a>(long);
long int  <a href="labs.htm">labs</a>(long int);
void      <a href="lcong48.htm">lcong48</a>(unsigned short int[7]);
ldiv_t    <a href="ldiv.htm">ldiv</a>(long int, long int);
long int  <a href="lrand48.htm">lrand48</a>(void);
void     *<a href="malloc.htm">malloc</a>(size_t);
int       <a href="mblen.htm">mblen</a>(const char *, size_t);
size_t    <a href="mbstowcs.htm">mbstowcs</a>(wchar_t *, const char *, size_t);
int       <a href="mbtowc.htm">mbtowc</a>(wchar_t *, const char *, size_t);
char     *<a href="mktemp.htm">mktemp</a>(char *);
int       <a href="mkstemp.htm">mkstemp</a>(char *);
long int  <a href="mrand48.htm">mrand48</a>(void);
long int  <a href="nrand48.htm">nrand48</a>(unsigned short int [3]);
char     *<a href="ptsname.htm">ptsname</a>(int);
int       <a href="putenv.htm">putenv</a>(char *);
void      <a href="qsort.htm">qsort</a>(void *, size_t, size_t, int (*)(const void *,
              const void *));
int       <a href="rand.htm">rand</a>(void);
int       <a href="randr199.htm">rand_r</a>(unsigned int *);
long      <a href="random.htm">random</a>(void);
void     *<a href="realloc.htm">realloc</a>(void *, size_t);
char     *<a href="realpath.htm">realpath</a>(const char *, char *);
unsigned  short int    <a href="seed48.htm">seed48</a>(unsigned short int[3]);
void      <a href="setkey.htm">setkey</a>(const char *);
char     *<a href="setstate.htm">setstate</a>(const char *);
void      <a href="srand.htm">srand</a>(unsigned int);
void      <a href="srand48.htm">srand48</a>(long int);
void      <a href="srandom.htm">srandom</a>(unsigned);
double    <a href="strtod.htm">strtod</a>(const char *, char **);
long int  <a href="strtol.htm">strtol</a>(const char *, char **, int);
unsigned long int
          <a href="strtoul.htm">strtoul</a>(const char *, char **, int);
int       <a href="system.htm">system</a>(const char *);
int       <a href="ttyslot.htm">ttyslot</a>(void); <b>(LEGACY)</b>
int       <a href="unlockpt.htm">unlockpt</a>(int);
void     *<a href="valloc.htm">valloc</a>(size_t); <b>(LEGACY)</b>
size_t    <a href="wcstombs.htm">wcstombs</a>(char *, const wchar_t *, size_t);
int       <a href="wctomb.htm">wctomb</a>(char *, wchar_t);
</code>
</pre>
<p>
Inclusion of the
<i>&lt;stdlib.h&gt;</i>
header may also make visible all symbols from
<i><a href="stdde256.htm">&lt;stddef.h&gt;</a></i>,
<i><a href="limit88.htm">&lt;limits.h&gt;</a></i>,
<i><a href="mathh95.htm">&lt;math.h&gt;</a></i>
and
<i><a href="syswa281.htm">&lt;sys/wait.h&gt;</a></i>.
</blockquote><h4><a name = "tag_000_009_006">&nbsp;</a>APPLICATION USAGE</h4><blockquote>
None.
</blockquote><h4><a name = "tag_000_009_007">&nbsp;</a>FUTURE DIRECTIONS</h4><blockquote>
None.
</blockquote><h4><a name = "tag_000_009_008">&nbsp;</a>SEE ALSO</h4><blockquote>
<i><a href="a64l.htm">a64l()</a></i>,
<i><a href="abort.htm">abort()</a></i>,
<i><a href="abs.htm">abs()</a></i>,
<i><a href="atexit.htm">atexit()</a></i>,
<i><a href="atof.htm">atof()</a></i>,
<i><a href="atoi.htm">atoi()</a></i>,
<i><a href="atol.htm">atol()</a></i>,
<i><a href="bsearch.htm">bsearch()</a></i>,
<i><a href="calloc.htm">calloc()</a></i>,
<i><a href="div.htm">div()</a></i>,
<i><a href="drand48.htm">drand48()</a></i>,
<i><a href="ecvt.htm">ecvt()</a></i>,
<i><a href="erand48.htm">erand48()</a></i>,
<i><a href="exit.htm">exit()</a></i>,
<i><a href="fcvt.htm">fcvt()</a></i>,
<i><a href="free.htm">free()</a></i>,
<i><a href="gcvt.htm">gcvt()</a></i>,
<i><a href="getenv.htm">getenv()</a></i>,
<i><a href="getsu70.htm">getsubopt()</a></i>,
<i><a href="grantpt.htm">grantpt()</a></i>,
<i><a href="inits80.htm">initstate()</a></i>,
<i><a href="jrand48.htm">jrand48()</a></i>,
<i><a href="l64a.htm">l64a()</a></i>,
<i><a href="labs.htm">labs()</a></i>,
<i><a href="lcong48.htm">lcong48()</a></i>,
<i><a href="ldiv.htm">ldiv()</a></i>,
<i><a href="lrand48.htm">lrand48()</a></i>,
<i><a href="malloc.htm">malloc()</a></i>,
<i><a href="mblen.htm">mblen()</a></i>,
<i><a href="mbstowcs.htm">mbstowcs()</a></i>,
<i><a href="mbtowc.htm">mbtowc()</a></i>,
<i><a href="mktemp.htm">mktemp()</a></i>,
<i><a href="mkstemp.htm">mkstemp()</a></i>,
<i><a href="mrand48.htm">mrand48()</a></i>,
<i><a href="nrand48.htm">nrand48()</a></i>,
<i><a href="ptsname.htm">ptsname()</a></i>,
<i><a href="putenv.htm">putenv()</a></i>,
<i><a href="qsort.htm">qsort()</a></i>,
<i><a href="rand.htm">rand()</a></i>,
<i><a href="rand.htm">rand_r()</a></i>,
<i><a href="realloc.htm">realloc()</a></i>,
<i><a href="realpath.htm">realpath()</a></i>,
<i><a href="setstate.htm">setstate()</a></i>,
<i><a href="srand.htm">srand()</a></i>,
<i><a href="srand48.htm">srand48()</a></i>,
<i><a href="srandom.htm">srandom()</a></i>,
<i><a href="strtod.htm">strtod()</a></i>,
<i><a href="strtol.htm">strtol()</a></i>,
<i><a href="strtoul.htm">strtoul()</a></i>,
<i><a href="unlockpt.htm">unlockpt()</a></i>,
<i><a href="wcstombs.htm">wcstombs()</a></i>,
<i><a href="wctomb.htm">wctomb()</a></i>,
<i><a href="systy278.htm">&lt;sys/types.h&gt;</a></i>.
</blockquote><hr size=2 noshade>
<center><font size=2>
UNIX &reg; is a registered Trademark of The Open Group.<br>
Copyright &copy; 1997 The Open Group
<br> [ <a href="../index.htm">Main Index</a> | <a href="../xshix.htm">XSH</a> | <a href="../xcuix.htm">XCU</a> | <a href="../xbdix.htm">XBD</a> | <a href="../cursesix.htm">XCURSES</a> | <a href="../xnsix.htm">XNS</a> ]

</font></center><hr size=2 noshade>
</body></html>
