<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<html>
<head>
<!-- Copyright 1997 The Open Group, All Rights Reserved -->
<title>mbtowc</title>
</head><body bgcolor=white>
<center>
<font size=2>
The Single UNIX &reg; Specification, Version 2<br>
Copyright &copy; 1997 The Open Group

</font></center><hr size=2 noshade>
<h4><a name = "tag_000_007_565">&nbsp;</a>NAME</h4><blockquote>
mbtowc - convert a character to a wide-character code
</blockquote><h4><a name = "tag_000_007_566">&nbsp;</a>SYNOPSIS</h4><blockquote>
<pre><code>

#include &lt;<a href="stdli258.htm">stdlib.h</a>&gt;

int mbtowc(wchar_t *<i>pwc</i>, const char *<i>s</i>, size_t <i>n</i>);
</code>
</pre>
</blockquote><h4><a name = "tag_000_007_567">&nbsp;</a>DESCRIPTION</h4><blockquote>
If
<i>s</i>
is not a null pointer,
<i>mbtowc()</i>
determines the number of the bytes that constitute the
character pointed to by
<i>s</i>.
It then determines the wide-character code for the value of type
<b>wchar_t</b>
that corresponds to that character.  (The value of the wide-character code
corresponding to the null byte is 0.) If the character is valid and
<i>pwc</i>
is not a null pointer,
<i>mbtowc()</i>
stores the wide-character code in the object pointed to by
<i>pwc</i>.
<p>
The behaviour of this function is affected by
the LC_CTYPE category of the current locale.
For a state-dependent encoding, this function is placed into its
initial state by a call for which its character pointer argument,
<i>s</i>,
is a null pointer.
Subsequent calls with
<i>s</i>
as other than a null pointer cause the internal state of the
function to be altered as necessary.
A call with
<i>s</i>
as a null pointer causes this function to return a non-zero
value if encodings have state dependency, and 0 otherwise.
If the implementation employs special bytes to change the shift
state, these bytes do not produce separate wide-character codes,
but are grouped with an adjacent character.
Changing the LC_CTYPE category causes the shift state of this
function to be indeterminate.
At most
<i>n</i>
bytes of the array pointed to by
<i>s</i>
will be examined.
<p>
The implementation will behave as if no function defined in
this specification calls
<i>mbtowc()</i>.
</blockquote><h4><a name = "tag_000_007_568">&nbsp;</a>RETURN VALUE</h4><blockquote>
If
<i>s</i>
is a null pointer,
<i>mbtowc()</i>
returns a non-zero or 0 value, if character encodings, respectively, do or
do not have state-dependent encodings.  If
<i>s</i>
is not a null pointer,
<i>mbtowc()</i>
either returns 0 (if
<i>s</i>
points to the null byte), or returns the number of bytes
that constitute the converted character (if the next
<i>n</i>
or fewer bytes form a valid character), or returns -1 and may set
<i>errno</i>
to indicate the error (if they do not form a valid character).
<p>
In no case will the value returned be greater than
<i>n</i>
or the value of the MB_CUR_MAX macro.
</blockquote><h4><a name = "tag_000_007_569">&nbsp;</a>ERRORS</h4><blockquote>
The
<i>mbtowc()</i>
function may fail if:
<dl compact>

<dt>[EILSEQ]<dd>
Invalid character sequence is detected.

</dl>
</blockquote><h4><a name = "tag_000_007_570">&nbsp;</a>EXAMPLES</h4><blockquote>
None.
</blockquote><h4><a name = "tag_000_007_571">&nbsp;</a>APPLICATION USAGE</h4><blockquote>
None.
</blockquote><h4><a name = "tag_000_007_572">&nbsp;</a>FUTURE DIRECTIONS</h4><blockquote>
None.
</blockquote><h4><a name = "tag_000_007_573">&nbsp;</a>SEE ALSO</h4><blockquote>
<i><a href="mblen.htm">mblen()</a></i>,
<i><a href="mbstowcs.htm">mbstowcs()</a></i>,
<i><a href="wctomb.htm">wctomb()</a></i>,
<i><a href="wcstombs.htm">wcstombs()</a></i>,
<i><a href="stdli258.htm">&lt;stdlib.h&gt;</a></i>.
</blockquote><hr size=2 noshade>
<center><font size=2>
UNIX &reg; is a registered Trademark of The Open Group.<br>
Copyright &copy; 1997 The Open Group
<br> [ <a href="../index.htm">Main Index</a> | <a href="../xshix.htm">XSH</a> | <a href="../xcuix.htm">XCU</a> | <a href="../xbdix.htm">XBD</a> | <a href="../cursesix.htm">XCURSES</a> | <a href="../xnsix.htm">XNS</a> ]

</font></center><hr size=2 noshade>
</body></html>
