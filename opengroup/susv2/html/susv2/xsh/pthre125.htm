<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<html>
<head>
<!-- Copyright 1997 The Open Group, All Rights Reserved -->
<title>pthread_attr_init</title>
</head><body bgcolor=white>
<center>
<font size=2>
The Single UNIX &reg; Specification, Version 2<br>
Copyright &copy; 1997 The Open Group

</font></center><hr size=2 noshade>
<h4><a name = "tag_000_007_1117">&nbsp;</a>NAME</h4><blockquote>
pthread_attr_init, pthread_attr_destroy
- initialise and destroy threads attribute object
</blockquote><h4><a name = "tag_000_007_1118">&nbsp;</a>SYNOPSIS</h4><blockquote>
<pre><code>

#include &lt;<a href="pthre114.htm">pthread.h</a>&gt;

int pthread_attr_init(pthread_attr_t *<i>attr</i>);
int pthread_attr_destroy(pthread_attr_t *<i>attr</i>);
</code>
</pre>
</blockquote><h4><a name = "tag_000_007_1119">&nbsp;</a>DESCRIPTION</h4><blockquote>
The function
<i>pthread_attr_init()</i>
initialises a thread attributes object
<i>attr</i>
with the default value for all of the individual attributes
used by a given implementation.
<p>
The resulting attribute object
(possibly modified by setting individual attribute values),
when used by
<i><a href="pthre147.htm">pthread_create()</a></i>,
defines the attributes of the thread created.
A single attributes object can be used in multiple simultaneous calls to
<i><a href="pthre147.htm">pthread_create()</a></i>.
<p>
The
<i>pthread_attr_destroy()</i>
function is used to destroy a thread attributes object.
An implementation may cause
<i>pthread_attr_destroy()</i>
to set
<i>attr</i>
to an implementation-dependent invalid value.
The behaviour of using the attribute after it has been destroyed is undefined.
</blockquote><h4><a name = "tag_000_007_1120">&nbsp;</a>RETURN VALUE</h4><blockquote>
Upon successful completion,
<i>pthread_attr_init()</i>
and
<i>pthread_attr_destroy()</i>
return a value of 0.
Otherwise, an error number is returned to indicate the error.
</blockquote><h4><a name = "tag_000_007_1121">&nbsp;</a>ERRORS</h4><blockquote>
The 
<i>pthread_attr_init()</i>
function will fail if:
<dl compact>

<dt>[ENOMEM]<dd>
Insufficient memory exists to initialise the thread attributes object.

</dl>
<p>
These functions will not return an error code of [EINTR].
</blockquote><h4><a name = "tag_000_007_1122">&nbsp;</a>EXAMPLES</h4><blockquote>
None.
</blockquote><h4><a name = "tag_000_007_1123">&nbsp;</a>APPLICATION USAGE</h4><blockquote>
None.
</blockquote><h4><a name = "tag_000_007_1124">&nbsp;</a>FUTURE DIRECTIONS</h4><blockquote>
None.
</blockquote><h4><a name = "tag_000_007_1125">&nbsp;</a>SEE ALSO</h4><blockquote>
<i><a href="pthre132.htm">pthread_attr_setstackaddr()</a></i>,
<i><a href="pthre133.htm">pthread_attr_setstacksize()</a></i>,
<i><a href="pthre126.htm">pthread_attr_setdetachstate()</a></i>,
<i><a href="pthre147.htm">pthread_create()</a></i>,
<i><a href="pthre114.htm">&lt;pthread.h&gt;</a></i>.
</blockquote><h4>DERIVATION</h4><blockquote>
Derived from the POSIX Threads Extension (1003.1c-1995)
</blockquote><hr size=2 noshade>
<center><font size=2>
UNIX &reg; is a registered Trademark of The Open Group.<br>
Copyright &copy; 1997 The Open Group
<br> [ <a href="../index.htm">Main Index</a> | <a href="../xshix.htm">XSH</a> | <a href="../xcuix.htm">XCU</a> | <a href="../xbdix.htm">XBD</a> | <a href="../cursesix.htm">XCURSES</a> | <a href="../xnsix.htm">XNS</a> ]

</font></center><hr size=2 noshade>
</body></html>

